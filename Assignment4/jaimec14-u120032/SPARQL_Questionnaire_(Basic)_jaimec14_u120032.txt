#1 Get all the classes:
select distinct ?class
where {
?x a ?class
} LIMIT 100

class
http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
http://www.w3.org/2000/01/rdf-schema#Class
http://GP-onto.fi.upm.es/exercisgraph#PhysicalPoint
http://GP-onto.fi.upm.es/exercisgraph#Stage
http://GP-onto.fi.upm.es/exercisgraph#Bicycle
http://GP-onto.fi.upm.es/exercisgraph#PostalAddress
http://GP-onto.fi.upm.es/exercisgraph#Road
http://GP-onto.fi.upm.es/exercisgraph#Cathedral
http://GP-onto.fi.upm.es/exercisgraph#City
http://GP-onto.fi.upm.es/exercisgraph#Route
http://GP-onto.fi.upm.es/exercisgraph#Stretch
http://GP-onto.fi.upm.es/exercisgraph#Location
http://GP-onto.fi.upm.es/exercisgraph#Palace
http://GP-onto.fi.upm.es/exercisgraph#Town
http://GP-onto.fi.upm.es/exercisgraph#RestaurationService


#2 Get all the subclasses of the class Establishment:
select distinct ?subclass
where {
?subclass rdfs:subClassOf <http://GP-onto.fi.upm.es/exercisgraph#Establishment>
} LIMIT 100

subclass
http://GP-onto.fi.upm.es/exercisgraph#Hostel
http://GP-onto.fi.upm.es/exercisgraph#GuestHouse
http://GP-onto.fi.upm.es/exercisgraph#Hotel


#3 Get all instances of the class City:
select distinct ?city
where {
?city a <http://GP-onto.fi.upm.es/exercisgraph#City>
} LIMIT 100

city
http://GP-onto.fi.upm.es/exercisgraph#ACoruC1a
http://GP-onto.fi.upm.es/exercisgraph#Santiago_de_Compostela
http://GP-onto.fi.upm.es/exercisgraph#Madrid


#4 Get the number of inhabitants of Santiago de Compostela:
prefix graph:<http://GP-onto.fi.upm.es/exercisgraph#>
select ?number
where {
graph:Santiago_de_Compostela graph:hasInhabitantNumber ?number
} LIMIT 100

number
" 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>


#5 Get the number of inhabitants of Santiago de Compostela and Arzua:
prefix graph:<http://GP-onto.fi.upm.es/exercisgraph#>
select ?number
where {
{graph:Santiago_de_Compostela graph:hasInhabitantNumber ?number}
UNION
{graph:Arzua graph:hasInhabitantNumber ?number}
} LIMIT 100

number
" 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>
" 38900 "^^<http://www.w3.org/2001/XMLSchema#integer>


#6 Get all places, together with the number of inhabitants, ordered by the place name (ascending):
prefix graph:<http://GP-onto.fi.upm.es/exercisgraph#>
select ?place ?number
where {
?place graph:hasInhabitantNumber ?number .
?place rdfs:label ?name
} ORDER BY ?name ASC(?place)
LIMIT 100

place															number
http://GP-onto.fi.upm.es/exercisgraph#Arzua						" 38900 "^^<http://www.w3.org/2001/XMLSchema#integer>
http://GP-onto.fi.upm.es/exercisgraph#Santiago_de_Compostela		" 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>


#7 Get all instances of  Locality together with their number of inhabitants (if this information exists):
prefix graph:<http://GP-onto.fi.upm.es/exercisgraph#>
select ?locality ?number
where {
{?locality a graph:Locality} UNION
{?locality a ?subclass .
?subclass rdfs:subClassOf graph:Locality} .
OPTIONAL {?locality graph:hasInhabitantNumber ?number}
} LIMIT 100

locality														number
http://GP-onto.fi.upm.es/exercisgraph#ACoruC1a	
http://GP-onto.fi.upm.es/exercisgraph#Santiago_de_Compostela		" 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>
http://GP-onto.fi.upm.es/exercisgraph#Madrid	
http://GP-onto.fi.upm.es/exercisgraph#Arzua						" 38900 "^^<http://www.w3.org/2001/XMLSchema#integer>


#8 Get all places with more than 200.000 inhabitants:
prefix graph:<http://GP-onto.fi.upm.es/exercisgraph#>
select ?place
where {
?place graph:hasInhabitantNumber ?number .
FILTER (xsd:integer(?number) > 200000)
} LIMIT 100

place
http://GP-onto.fi.upm.es/exercisgraph#Santiago_de_Compostela


#9 Get postal address data for Pazo_Breogan (street, number, locality, province):
prefix graph:<http://GP-onto.fi.upm.es/exercisgraph#>
select ?street ?number ?locality ?province
where {
graph:Pazo_Breogan graph:hasAddress ?address .
?address graph:hasStreet ?street .
?address graph:hasNumber ?number .
graph:Pazo_Breogan graph:isPlacedIn ?locality .
?locality graph:inProvince ?province
} LIMIT 100

street		number	locality									province
C/Mayor		5		http://GP-onto.fi.upm.es/exercisgraph#Arzua	Pontevedra


#10 Get all subclasses of class Location:
prefix graph:<http://GP-onto.fi.upm.es/exercisgraph#>
select distinct ?subclass
where {
?subclass rdfs:subClassOf graph:Location
} LIMIT 100

subclass
http://GP-onto.fi.upm.es/exercisgraph#LocationOfInterest


#11 Get all instances of class Locality1:
prefix graph:<http://GP-onto.fi.upm.es/exercisgraph#>
select distinct ?instance
where {
?instance a graph:Locality
} LIMIT 100

instance


#12 Describe the resource with rdfs:label "Madrid”:
prefix graph:<http://GP-onto.fi.upm.es/exercisgraph#>
describe ?resource
where {
?resource rdfs:label "Madrid"
} LIMIT 100

@prefix ns0:	<http://GP-onto.fi.upm.es/exercisgraph#> .
ns0:GP_Santiago_Instance_72	ns0:hasEnd	ns0:Madrid .
@prefix rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
ns0:Madrid	rdf:type	ns0:City .
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#> .
ns0:Madrid	rdfs:label	"Madrid" ;
	ns0:isLocatedAtPoint	ns0:GP_Santiago_Instance_74 ;
	ns0:inProvince	"Madrid" .

	
#13 Construct a graph that relates directly all touristic places with their provinces, using a new property called ”isIn”:
prefix graph:<http://GP-onto.fi.upm.es/exercisgraph#>
construct {?touristicPlace graph:isIn ?province}
where {
{?touristicPlace a graph:TouristicLocation}
UNION
{?touristicPlace a ?subclass .
 ?subclass rdfs:subClassOf graph:TouristicLocation} .
?touristicPlace graph:isPlacedIn ?locality .
?locality graph:inProvince ?province
} LIMIT 100

@prefix ns0:	<http://GP-onto.fi.upm.es/exercisgraph#> .
ns0:Cathedral_Santiago_Compostela	ns0:isIn	"Pontevedra" .
ns0:Pazo_Breogan	ns0:isIn	"Pontevedra" .


#14 Check whether there is any instance of Tow:
prefix graph:<http://GP-onto.fi.upm.es/exercisgraph#>
ask
where { 
?instance a graph:Town 
}

true
